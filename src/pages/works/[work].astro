---
import BaseLayout from "@layouts/BaseLayout.astro";
import { marked } from "marked";
import { getCollection, render } from "astro:content";
import { imageStore } from "@lib/imageStore";
import { Config } from "@config";

export async function getStaticPaths() {
  const works = await getCollection("work");
  return works.map((entry) => ({
    params: { work: entry.id },
    props: entry,
  }));
}

const themes = [
  "theme-compact-gallery",
  "theme-modern-minimal",
  "theme-mono-exhibit",
] as const;

const rawCols = Number(Config.detailPage.column ?? 1);
const gridCols =
  Number.isFinite(rawCols) && rawCols > 0 ? Math.floor(rawCols) : 1;

// Reuse your page spacing from Config (fallbacks keep things resilient)
const pageVMargin = "2rem";
const pageHMargin = "2rem";

// Sensible defaults for multi-column gaps (theme can override later)
const multiRowGap = "clamp(2.5rem, 6vw, 6rem)";
const multiColGap = "3rem";

const work = Astro.props;

// Expecting an array of image paths/objects for this work
const images = imageStore.requireImagesForWork(work.id) ?? [];

// Normalize keywords to an array
const keywordsRaw = work.data.keywords ?? [];
const keywords = Array.isArray(keywordsRaw)
  ? keywordsRaw
  : String(keywordsRaw)
      .split(",")
      .map((k) => k.trim())
      .filter(Boolean);
---

<BaseLayout>
  {
    /*
    SWITCH THEME HERE:
    Options: theme-compact-gallery | theme-modern-minimal | theme-mono-exhibit
  */
  }
  <article class=`work ${themes[Config.detailPage.theme - 1]}`>
    <!-- Hero -->
    <header class="work-hero" aria-labelledby="work-title">
      <div class="work-hero__left">
        <h1 id="work-title" class="text-block-title">{work.data.title}</h1>

        <div class="meta-stack">
          {work.data.year && <p class="meta-item">{work.data.year}</p>}

          {
            keywords.length > 0 && (
              <ul class="meta-tags" role="list">
                {keywords.map((k) => (
                  <li class="meta-tag">{k}</li>
                ))}
              </ul>
            )
          }
        </div>

        <div
          class="text-block-content"
          set:html={marked.parse(work.data.meta_jp)}
        />
      </div>

      <div class="work-hero__right">
        {
          work.data.description_jp && (
            <div
              class="text-block-content intro"
              set:html={marked.parse(work.data.description_jp)}
            />
          )
        }
      </div>
    </header>

    <!-- Image grid -->
    {
      images.length > 0 && (
        <ul
          class="work-grid"
          role="list"
          data-cols={gridCols}
          style={`
        --grid-columns: ${gridCols};
        --page-vmargin: ${pageVMargin};
        --page-hmargin: ${pageHMargin};
        --multi-row-gap: ${multiRowGap};
        --multi-col-gap: ${multiColGap};
      `}
        >
          {images.map((img, i) => {
            const src = typeof img === "string" ? img : (img?.src ?? "");
            const alt = `${work.data.title} — image ${i + 1}`;
            return (
              <li class="grid-item">
                <a
                  href={src}
                  aria-label={`Open image ${i + 1} for ${work.data.title}`}
                >
                  <div class="image-wrapper">
                    <img
                      src={src}
                      alt={alt}
                      loading="lazy"
                      class="list-image"
                      width="1600"
                      height="1200"
                    />
                  </div>
                </a>
              </li>
            );
          })}
        </ul>
      )
    }
  </article>
</BaseLayout>

<style>
  /* ------------------------------------------------------------
     Base layout & type (shared across all themes)
     Keep this lean; themes only override what's necessary.
  ------------------------------------------------------------ */
  .work-hero {
    display: grid;
    grid-template-columns: 1fr minmax(0, 1fr);
    gap: clamp(2rem, 6vw, 6rem);
    align-items: start;
    max-width: 1600px;
    margin: 0 auto;
    padding: clamp(2rem, 6vw, 6rem) 2rem 0;
    color: var(--font-color-body);
  }

  .text-block-title {
    color: var(--font-color-title);
  }

  .work-hero__left {
    display: grid;
    align-content: start;
    gap: 0.9rem;
  }

  .meta-stack {
    display: grid;
    gap: 0.4rem;
  }

  .meta-item {
    font-size: 0.9rem;
    font-weight: 300;
    letter-spacing: 0.08em;
    color: var(--font-color-body);
    margin: 0;
  }

  .meta-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem 0.6rem;
    list-style: none;
    margin: 0.2rem 0 0;
    padding: 0;
  }
  .meta-tag {
    font-size: 0.78rem;
    text-transform: uppercase;
    letter-spacing: 0.14em;
    font-weight: 300;
    color: var(--font-color-body);
    padding: 0;
    border: 0;
  }
  .meta-tag + .meta-tag::before {
    content: "•";
    margin: 0 0.45rem 0 0.2rem;
    color: var(--font-color-body);
  }

  .text-block-content {
    font-weight: 300;
  }
  .text-block-content :global(p) {
    line-height: 1.7;
    margin: 0;
  }
  .text-block-content :global(p + p) {
    margin-block-start: 1.6em;
  }
  .text-block-content :global(h2) {
    font-size: 1rem;
    letter-spacing: 0.12em;
    text-transform: uppercase;
    font-weight: 300;
    margin-top: 2rem;
    color: var(--font-color-title);
  }
  .text-block-content :global(h3) {
    font-size: 0.95rem;
    letter-spacing: 0.08em;
    text-transform: uppercase;
    font-weight: 300;
    margin-top: 1.5rem;
    color: var(--font-color-title);
  }
  .text-block-content :global(ul, ol, blockquote) {
    margin-block: 1rem;
  }

  @media (max-width: 900px) {
    .work-hero {
      grid-template-columns: 1fr;
    }
    .work-hero__right {
      order: 2;
    }
  }

  /* Image grid */
  .work-grid {
    margin: clamp(4rem, 12vw, 10rem) auto;
    padding: 0 1rem;
    max-width: 1600px;
    display: grid;

    /* columns from config */
    grid-template-columns: repeat(var(--grid-columns, 1), minmax(0, 1fr));

    /* default (multi-column) gaps, theme-overridable via vars */
    row-gap: var(--multi-row-gap, clamp(2.5rem, 6vw, 6rem));
    column-gap: var(--multi-col-gap, 3rem);

    list-style: none;
    align-items: end;
  }

  /* When the config sets 1 column:
   reuse your page "heighting" rhythm from Config. */
  .work-grid[data-cols="1"] {
    row-gap: var(--page-vmargin, 2rem);
    column-gap: var(--page-hmargin, 2rem);
  }

  .grid-item a {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: inherit;
    transition: opacity 0.2s ease;
  }
  .grid-item a:hover {
    opacity: 0.96;
  }

  .image-wrapper {
    position: relative;
    overflow: hidden;
    border-radius: 0;
  }
  .list-image {
    display: block;
    width: 100%;
    height: auto;
  }

  /* Optional: narrower text measure on wide screens for readability */
  @media (min-width: 901px) {
    .work-hero__left .text-block-content {
      max-width: 68ch;
    }
  }

  /* ------------------------------------------------------------
     THEME 1 — Compact Gallery (matches your reference)
     Small font, tight leading, uppercase headings, tracked letters,
     subtle underline on hover-like behavior for CTA-esque links.
  ------------------------------------------------------------ */
  .theme-compact-gallery .text-block-title {
    display: inline-block;
    position: relative;
    padding-bottom: 2px;
    font-size: 0.8rem;
    text-transform: uppercase;
    letter-spacing: 0.18em; /* ~3px at 16px */
    font-weight: 400;
    margin: 0 0 1rem 0;
  }
  .theme-compact-gallery .text-block-content {
    font-size: 0.8rem;
    line-height: 1.6;
  }
  .theme-compact-gallery .meta-item {
    font-size: 0.8rem;
    letter-spacing: 0.08em;
  }
  .theme-compact-gallery .meta-tag {
    font-size: 0.72rem;
    letter-spacing: 0.14em;
  }
  .theme-compact-gallery .text-block-content :global(h2) {
    font-size: 0.82rem;
    letter-spacing: 0.18em;
  }
  .theme-compact-gallery .text-block-content :global(h3) {
    font-size: 0.78rem;
    letter-spacing: 0.14em;
  }
  /* Clamp intro a bit on small screens for a compact hero */
  @media (max-width: 767px) {
    .theme-compact-gallery .intro {
      display: -webkit-box;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  }

  /* ------------------------------------------------------------
     THEME 2 — Modern Minimal (airier but still gallery-calm)
     Slightly larger body, lighter tracking, sentence-case titles.
  ------------------------------------------------------------ */
  .theme-modern-minimal .text-block-title {
    font-size: clamp(1rem, 1.2vw, 1.15rem);
    font-weight: 400;
    letter-spacing: 0.06em;
    text-transform: none;
    margin: 0 0 0.75rem 0;
  }
  .theme-modern-minimal .text-block-content {
    font-size: 0.92rem;
    line-height: 1.75;
  }
  .theme-modern-minimal .meta-item {
    font-size: 0.85rem;
    letter-spacing: 0.06em;
  }
  .theme-modern-minimal .meta-tag {
    font-size: 0.76rem;
    letter-spacing: 0.12em;
  }
  .theme-modern-minimal .text-block-content :global(h2),
  .theme-modern-minimal .text-block-content :global(h3) {
    text-transform: uppercase;
    letter-spacing: 0.12em;
    font-weight: 300;
  }

  /* ------------------------------------------------------------
     THEME 4 — Mono Exhibit (structured, label-like type)
     Uses monospaced accents for meta/tags; keeps body readable.
  ------------------------------------------------------------ */
  .theme-mono-exhibit .text-block-title {
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.16em;
    font-weight: 500;
    margin: 0 0 0.75rem 0;
  }
  .theme-mono-exhibit .meta-item,
  .theme-mono-exhibit .meta-tag {
    font-family:
      ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    letter-spacing: 0.1em;
  }
  .theme-mono-exhibit .meta-item {
    font-size: 0.78rem;
  }
  .theme-mono-exhibit .meta-tag {
    font-size: 0.7rem;
  }
  .theme-mono-exhibit .text-block-content {
    font-size: 0.9rem;
    line-height: 1.65;
  }
  .theme-mono-exhibit .text-block-content :global(h2),
  .theme-mono-exhibit .text-block-content :global(h3) {
    text-transform: uppercase;
    letter-spacing: 0.14em;
    font-weight: 400;
  }
</style>
