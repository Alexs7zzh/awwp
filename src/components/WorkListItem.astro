---
import type { CollectionEntry } from 'astro:content';
import { Picture } from 'astro:assets';

interface Props {
  work: CollectionEntry<'work'>;
  priorityLoad?: boolean;
}

const { work, priorityLoad = false } = Astro.props;
const titleId = `work-title-${work.id}`;
---

<li>
  <a href={`/${work.id}`} aria-labelledby={titleId}>
    <div class="work-info">
      <div class="title-year-column">
        <h3 id={titleId}>{work.data.title}</h3>
        <p class="year">{work.data.year}</p>
      </div>
      <div class="intro-keywords-column">
        <p class="intro">{work.data.intro}</p>
        <p class="keywords">{work.data.keywords.join(', ')}</p>
      </div>
      <div class="image-list-column">
        <div class=`image-list-container ${work.data.imgs.length == 1 ? 'single' : ''}`>
          {work.data.imgs.map((image, index) => (
            <Picture 
              src={image.url} 
              alt={image.label ?? `Image ${index + 1} for ${work.data.title}`}
              formats={['avif', 'webp']}
              widths={[200, 400]} 
              class="list-image"
              loading={priorityLoad ? "eager" : "lazy"}
              fetchpriority={priorityLoad ? "high" : "auto"}
            />
          ))}
        </div>
      </div>
    </div>
  </a>
</li>

<style>
  :root {
    --item-padding-y-mobile: 3rem;
    --item-padding-x-mobile: 1rem;
    --item-padding-y-desktop: 3rem;
    --item-padding-x-desktop: 2rem;
    --grid-gap-mobile: 1rem;
    --grid-gap-medium: 1.5rem;
    --grid-gap-large: 3rem;
    --image-max-height-mobile: 200px;
    --image-max-height-desktop: 100px;
    --image-gap: 0.5rem;
  }

  li {
    list-style: none;
    width: 100%;
    border-bottom: 1px solid #a1a1a1;
  }

  li:last-child {
    border-bottom: none;
  }

  a {
    text-decoration: none;
    color: inherit;
    display: block;
    padding: var(--item-padding-y-mobile) var(--item-padding-x-mobile);
  }
  
  /* Base styles (Mobile-first: smallest screens < 701px) */
  .work-info {
    display: grid;
    grid-template-columns: 1fr;
    align-items: start;
    gap: var(--grid-gap-mobile);
    width: 100%;
  }

  /* Reorder columns visually for mobile */
  .image-list-column {
    order: 1; 
    min-width: 0; /* Prevent content from expanding the column */
    padding-bottom: 2rem; /* Spacing below images on mobile */
  }
  .title-year-column {
    order: 2;
  }
  .intro-keywords-column {
    order: 3;
  }

  h3 {
    margin: 0 0 0.25rem 0;
    font-weight: bold;
    color: #000;
  }

  .year {
    font-size: 0.9em;
    color: #666;
  }

  .intro {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    margin-bottom: 0.5rem;
  }

  .keywords {
    font-size: 0.85em;
    color: #777;
  }

  .image-list-container {
    display: flex;
    gap: var(--image-gap);
    overflow-x: auto;
    white-space: nowrap;
    scrollbar-width: none; /* Firefox */
    width: 100vw;
    position: relative;
    left: 50%;
    transform: translateX(-50%);
    box-sizing: border-box;
  }

  .image-list-container::-webkit-scrollbar {
    display: none;
  }

  .list-image {
    display: inline-block;
    max-height: var(--image-max-height-mobile);
    width: auto;
    flex: 0 0 auto;
    vertical-align: middle;
  }

  @media (max-width: 700px) {
    .single .list-image {
      width: 100vw;
      height: auto;
      max-height: unset;
    }
  }

  /* Medium screens (>= 701px) - Two-column layout */
  @media (min-width: 701px) {
    a {
      padding: var(--item-padding-y-desktop) var(--item-padding-x-desktop);
    }

    .work-info {
      grid-template-columns: auto 50%;
      grid-template-rows: auto 1fr;
      gap: var(--grid-gap-medium);
    }

    /* Reset order and mobile spacing */
    .image-list-column {
      order: initial; 
      min-width: initial;
      padding-bottom: 0;
    }
    .title-year-column {
      order: initial;
    }
    .intro-keywords-column {
      order: initial;
    }

    /* Set grid placements */
    .title-year-column {
      grid-column: 1 / 2;
      grid-row: 1 / 2;
    }
    .intro-keywords-column {
      grid-column: 1 / 2;
      grid-row: 2 / 3;
    }
    .image-list-column {
      grid-column: 2 / 3;
      grid-row: 1 / 3;
      align-self: start;
    }
    
    .image-list-container {
      /* Reset full-width styles & scrolling */
      width: auto;
      position: static;
      left: auto;
      transform: none;
      padding-left: 0;
      padding-right: 0;
      overflow-x: visible;
      white-space: normal;
      flex-wrap: wrap;
    }
    
    .list-image {
      display: block;
      max-height: var(--image-max-height-desktop);
    }
  }

  /* Large screens (>= 1051px) - Three-column layout */
  @media (min-width: 1051px) {
    .work-info {
      grid-template-columns: 20% 30% auto;
      grid-template-rows: auto;
      gap: var(--grid-gap-large);
    }
    
    /* Reset grid placements for 3 columns */
    .title-year-column {
        grid-column: 1 / 2;
        grid-row: 1 / 2;
    }
    .intro-keywords-column {
        grid-column: 2 / 3;
        grid-row: 1 / 2;
    }
    .image-list-column {
        grid-column: 3 / 4;
        grid-row: 1 / 2;
    }
  }
</style>