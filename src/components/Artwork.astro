---
import { getEntry, type CollectionEntry } from "astro:content";
import { Picture } from 'astro:assets';
import FloatingContainer from '@components/FloatingContainer.astro';
import VideoPlayer from '@components/VideoPlayer.astro';

interface Props {
  id: CollectionEntry<'work'>['id'];
  offset: number;
  scale?: number;
  priorityLoad?: boolean;
}

const {
  id,
  offset,
  scale = 1,
  priorityLoad = false,
} = Astro.props;

const work = await getEntry('work', id);

if (!work) {
  console.warn(`[Artwork] Work with ID "${id}" not found.`);
  return null;
}

const { title, thumbnail, intro, year, has_video = false } = work.data;
const videoSrcMp4 = `https://pub-a62e56dba43847909d2a4aeee8b7c674.r2.dev/${id}.mp4`;

const styles = `--artwork-scale: ${scale};`;
---

<FloatingContainer {offset}>
  <article class="artwork-content" style={styles}>
    {has_video ? (
      <div class="artwork-video">
        <VideoPlayer 
          sources={{ mp4: videoSrcMp4 }}
          thumbnail={thumbnail}
          alt={`${title} video`}
        />
      </div>
    ) : (
      <Picture 
        src={thumbnail} 
        alt={title}
        formats={['avif', 'webp']} 
        widths={[480, 800, 1200, 1600]} 
        sizes="(max-width: 768px) 100vw, 50vw"
        class="artwork-image"
        loading={priorityLoad ? "eager" : "lazy"}
        decoding={priorityLoad ? "sync" : "auto"}
        fetchpriority={priorityLoad ? "high" : "auto"}
      />
    )}
    <div class="text-content">
      <a href={`/works/${id}/`} class="artwork-link">
        <h2 class="title">{title}</h2>
        <p class="description">{intro}</p>
      </a>
      <p class="year">{year}</p>
    </div>
  </article>
</FloatingContainer>

<style>
  .artwork-content {
    position: relative;
  }

  .artwork-link {
    text-decoration: none;
    color: inherit;
    display: block;
  }

  .artwork-image,
  .artwork-video {
    display: block;
    width: 100%; /* Default width for mobile */
    height: auto;
    margin-bottom: .8rem;
    position: relative;
    left: 0; /* Default left position for mobile */
    /* max-width: none; removed as default, let it inherit or be 100% */
  }

  @media (min-width: 769px) {
    .artwork-image,
    .artwork-video {
      width: calc(100% * var(--artwork-scale, 1));
      left: calc(50% * (1 - var(--artwork-scale, 1)));
      max-width: none; /* Apply max-width: none only on desktop */
    }
  }

  .artwork-video :global(.video-js) {
    width: 100%;
    height: auto;
  }
  .artwork-video > :first-child {
    width: 100%;
    height: auto;
  }

  .text-content {
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
  }

  .title {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.3rem;
    display: inline-block;
    position: relative;
    padding-bottom: 2px;
    transition: color 0.2s ease-in-out;
  }

  .artwork-link:hover .title::after {
    width: 100%;
  }

  .title::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 0;
    height: 1px;
    background-color: currentColor;
    transition: width 0.3s ease-in-out;
  }

  .description {
    font-family: sans-serif;
    line-height: 1.7;
    color: #333;
    margin-bottom: 0.5rem;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 5;
    -webkit-box-orient: vertical;
  }

  .year {
    margin-top: 0.5rem;
    font-size: 0.8rem;
    font-weight: 400;
    color: #333;
    font-family: monospace;
  }
</style> 