---
import { Config } from "@config";
const { header } = Config;
---

<header
  id="site-header"
  data-resize={header.resize}
  data-line={header.line}
  class={`site-header${header.resize ? " can-shrink" : ""}`}
>
  <a href="/" class="home">Akira Wakita</a>
  <nav>
    <a href="/works">Works</a>
    <a href="/about">About</a>
  </nav>
</header>

<style>
  /* -------- Base link styles -------- */
  a {
    text-decoration: none;
    transition: opacity 0.2s ease-in-out;
    text-transform: uppercase;
  }
  a:hover {
    opacity: 0.7;
  }

  /* -------- Header layout -------- */
  .site-header {
    /* Animatable custom props (big state by default) */
    --pad-top: 2rem; /* distance from page edge (padding) */
    --home-size: 1.5rem; /* site title size */
    --nav-size: 1rem; /* nav links size */
    --gap: 2rem; /* space between title and nav */
    --nav-gap: 1.5rem; /* space between nav items */
    --letter-spacing: 0.04em;
    --line-color: rgba(128, 128, 128, 0.35);

    /* mix-blend-mode: difference;
    color: white; */
    color: #151515;
    position: fixed;
    top: 0;
    left: 0;
    right: 0; /* full width */
    display: flex;
    justify-content: flex-start; /* was: space-between */
    align-items: center;
    gap: var(--gap);
    padding: var(--pad-top) 2rem 0.5rem;
    z-index: 1000;

    background: #f8feff;
    mix-blend-mode: normal;
    color: inherit;
    text-shadow: none;

    /* Smooth transitions for the shrink/grow effect + bg/line changes */
    transition:
      padding 200ms ease,
      gap 200ms ease,
      background-color 200ms ease,
      border-color 200ms ease,
      backdrop-filter 200ms ease,
      -webkit-backdrop-filter 200ms ease;
  }

  /* Bottom border line controlled by data-line */
  .site-header[data-line="true"] {
    border-bottom: 1px solid transparent;
  }

  .site-header.shrunken[data-line="true"] {
    border-bottom-color: var(--line-color); /* becomes visible when shrunken */
  }

  .home {
    font-size: var(--home-size);
    font-weight: 300;
    letter-spacing: var(--letter-spacing);
    transition:
      font-size 200ms ease,
      letter-spacing 200ms ease;
  }

  .site-header nav {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: var(--nav-gap);
  }

  .site-header nav a {
    font-size: var(--nav-size);
    font-weight: 300;
    transition: font-size 200ms ease;
  }

  /* -------- Shrunk state (applied by JS) -------- */
  .site-header.shrunken {
    --pad-top: 0.9rem; /* closer to the edge */
    --home-size: 1.1rem; /* smaller title */
    --nav-size: 0.95rem; /* smaller nav links */
    --gap: 1.25rem;
    --nav-gap: 1rem;
    --letter-spacing: 0.03em;
  }

  /* -------- Mobile tweaks -------- */
  @media (max-width: 600px) {
    .site-header {
      --pad-top: 1rem;
      --home-size: 1.2rem;
      --nav-gap: 1.25rem;
    }
    .site-header.shrunken {
      --pad-top: 0.75rem;
      --home-size: 1.05rem;
      --nav-size: 0.9rem;
    }
  }

  /* Respect reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .site-header,
    .home,
    .site-header nav a {
      transition: none !important;
    }
  }
</style>

<script>
  (() => {
    const header = document.getElementById("site-header");
    if (!header) return;

    const canResize = header.dataset.resize === "true";
    if (!canResize) return;

    const SHRINK_OFFSET = 40;
    let lastY = window.scrollY;

    const onScroll = () => {
      const y = window.scrollY;

      if (y > SHRINK_OFFSET) {
        header.classList.add("shrunken");
      } else {
        header.classList.remove("shrunken");
      }

      lastY = y;
    };

    // Run once and on scroll; passive for perf.
    onScroll();
    window.addEventListener("scroll", onScroll, { passive: true });
  })();
</script>
