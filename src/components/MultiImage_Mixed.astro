---
import { getEntry } from "astro:content";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

interface Props {
  id: string;
  parallaxSpeed?: number;
  images: ImageMetadata[];
}
const { id, images, parallaxSpeed = Math.random() } = Astro.props;

const work = await getEntry('work', id);
if (!work) {
  throw new Error(`No work found by id ${id}`);
}

function calculateImageWidth(image: ImageMetadata): number {
  const aspectRatio = image.width / image.height;
  if (aspectRatio < 0.8) return 40; // Portrait images
  if (aspectRatio <= 1.2) return 65; // Square-ish images
  return 85; // Landscape images
}

function getAlignmentClass(image: ImageMetadata, index: number): string {
  const aspectRatio = image.width / image.height;
  if (aspectRatio > 0.9 && aspectRatio < 1.2) {
    return 'align-center';
  }
  // Stagger non-square images
  return index % 2 === 0 ? 'align-left' : 'align-right';
}
---

<!-- MODIFICATION 3: The main article now acts as a vertical container. -->
<article
  class="artwork-content"
  aria-labelledby={`work-${work.id}-title}`}
  data-parallax-speed={parallaxSpeed}
>
  <!-- The images container now takes up the full width. -->
  <div class="images-container">
    {images.map((image, index) => {
      const imageWidth = calculateImageWidth(image);
      const alignmentClass = getAlignmentClass(image, index);

      return (
        <!-- MODIFICATION 4: Each image is wrapped in a div for alignment control. -->
        <div class={`image-wrapper ${alignmentClass}`}>
          <Image
            src={image}
            alt={`${work.data.title} - Image ${index + 1}`}
            class="artwork-image"
            loading="lazy"
            format="webp"
            style={`width: ${imageWidth}%;`}
          />
        </div>
      )
    })}
  </div>

  <!-- MODIFICATION 5: The text link/placard is moved out and placed after the images. -->
  <a href={`/works/${work.id}/`} class="artwork-link style-gallery-placard">
    <h2 id={`work-${work.id}-title`} class="title">
      {work.data.title}
    </h2>
    <p class="description">{work.data.intro}</p>
  </a>
</article>

<style>
/* MODIFICATION 6: Changed to a column layout. */
.artwork-content {
  display: flex;
  flex-direction: column; /* Changed from row to column */
  width: 100%;
  margin-bottom: 30vh;
}

/* MODIFICATION 7: Container is now full-width and stacks images vertically. */
.images-container {
  width: 100%;
  padding: 0; /* Removed padding */
  display: flex;
  flex-direction: column; /* Stack image wrappers vertically */
  gap: 15vh; /* Controls vertical space between images */
}

/* MODIFICATION 8: New styles for the alignment wrapper */
.image-wrapper {
  width: 100%;
  display: flex;
}
.image-wrapper.align-left {
  justify-content: flex-start;
  padding-left: 5%; /* Give it some breathing room from the edge */
}
.image-wrapper.align-right {
  justify-content: flex-end;
  padding-right: 5%; /* Give it some breathing room from the edge */
}
.image-wrapper.align-center {
  justify-content: center;
}

.artwork-image {
  height: auto;
  display: block;
  max-width: 100%; /* Ensure it doesn't overflow its container */
  box-shadow: 0 10px 30px rgba(0,0,0,0.05); /* Optional: add a subtle shadow */
}

/* MODIFICATION 9: Placard is now centered below the images. */
.artwork-link {
  text-decoration: none;
  color: inherit;
  margin: 15vh auto 0 auto; /* Center horizontally with top margin */
  padding: 2rem;
  max-width: 65ch; /* Good for readability */
  text-align: center; /* Center the text inside the placard */
}

.title {
  font-size: 1rem;
  font-weight: 500;
  letter-spacing: 2px;
  margin-bottom: 0.3rem;
  display: inline-block;
  position: relative;
  padding-bottom: 2px;
}
.title::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  width: 0;
  height: 1px;
  background: currentColor;
  transition: width 0.3s;
}
.artwork-link:hover .title::after {
  width: 100%;
}

.description {
  line-height: 1.7;
  font-size: 0.85rem;
  color: #333;
  margin-top: 0.25rem;
}

.style-gallery-placard .title {
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 3px;
  font-weight: 400;
  margin-bottom: 0.8rem;
}

.style-gallery-placard .description {
  font-size: 0.8rem;
  line-height: 1.6;
  color: #666;
}

/* MODIFICATION 10: Simplified mobile styles for the new layout. */
@media (max-width: 767px) {
  .artwork-content {
    margin-bottom: 25vh;
  }
  .images-container {
    gap: 1rem; /* Less gap on mobile */
  }
  
  /* On mobile, force all images to be centered and nearly full-width */
  .image-wrapper {
    justify-content: center;
    padding-left: 0;
    padding-right: 0;
  }
  .artwork-image {
    width: 90% !important; /* Override inline style for a consistent mobile view */
  }

  .artwork-link {
    margin-top: 5rem;
    width: 100%;
    padding: 1rem;
  }
}
</style>
